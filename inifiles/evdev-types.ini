# Configuration file for MCE - evdev device type overrides
#
# MCE tries to guess input device type based on what kinds of
# events devices are reportedly capable of sending. In some
# cases this does not work as expected and device types must
# be explicitly configured to avoid undesirable side effects.

[EVDEV_TYPE]

# Key can be
#
# "b<bus_id>v<vendor_id>p<product_id>" where each id is
# hexadecimal number of length 4 using lower case a-f.
#
# "device_name", as obtained via EVIOCGNAME ioctl() but sanitized
# so that it does not contain characters that are not allowed in
# ini key names.

# Values are of form: "TYPE[:REPLACES][;TYPE[:REPLACES]...
#
# To clarify, couple of examples
#
# b0003v1234p4567=IGNORE
#    probed type does not matter, device is ignored
#
# b0003v1234p4567=ACTIVITY:KEYBOARD
#    if probing yields KEYBOARD, use ACTIVITY
#    else use probed type
#
# b0003v1234p4567=MOUSE:MOUSE;ACTIVITY
#    if probing yields MOUSE, use MOUSE
#    else use ACTIVITY
#
# b0003v1234p4567=ACTIVITY:KEYBOARD;IGNORE:MOUSE
#    if probing yields KEYBOARD, use ACTIVITY
#    else if probing yields MOUSE, use IGNORE
#    else use probed type
#
# b0003v1234p4567=ACTIVITY:KEYBOARD;IGNORE:MOUSE;REJECT
#    if probing yields KEYBOARD, use ACTIVITY
#    else if probing yields MOUSE, use IGNORE
#    else use REJECT
#
# b0003v1234p4567=REJECT;ACTIVITY:KEYBOARD;IGNORE:MOUSE
#    syntactically correct, but as the first entry is
#    not conditional, the extra bits are effectively
#    useless and this becomes:
#    probed type does not matter, device is rejected
#
# b0003v1234p4567=
#    use probed type (this might be useful in case
#    there is a need to clear generic override from
#    hw specific configuration file).

# Possible type identifiers are:
#
# - IGNORE
# - REJECT
#      Ignored by mce
# - TOUCH
#      Handle as touch input device
# - MOUSE
#      Handle as mouse input device
# - INPUT
#      Emits keys that mce needs to track
# - ACTIVITY
#      Generates user activity, otherwise ignored
# - DBLTAP
# - DOUBLE_TAP
#      Touch device that emits KEY_POWER on double tap
# - PS
# - PROXIMITY_SENSOR
#      Proximity sensor
# - ALS
# - LIGHT_SENSOR
#      Ambient light sensor
# - VOLKEY
# - VOLUME_KEYS
#      Emits volume key events
# - KEYBOARD
#      Keyboard that is capable enough to replace sw keyboard

################################################################
# MOUSE DEVICES

# XperiaX (f5121) can use touchscreen as virtual mouse
# As the input device node is always "available", it interferes
# with reacting to attached usb / bluetooth mouse devices
hbtp_vm=IGNORE

# Logitech USB Receiver
# Shows up as two input devices: keyboard and mouse.
# We want to track only the mouse one.
b0003v046dpc534=MOUSE:MOUSE;ACTIVITY
