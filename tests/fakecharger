#! /bin/sh
program=fakecharger
version=1.2.0

DBUS_PATH=/com/nokia/bme/signal
DBUS_INTERFACE=com.nokia.bme.signal
DBUS_SEND=dbus-send
DBUS_SEND_FLAGS='--system --type=signal'

usage()
{
	printf "Usage: %s [OPTION]... [TEST]...\n" $program
	printf "Test MCE and Battery status-bar applet by emulating\n"
	printf "charger plugging events\n\n"

	printf "  --help      display this help and exit\n"
	printf "  --version   output version information and exit\n\n"

	printf "Valid tests are:\n\n"

	printf "  charger_charging_on\n"
	printf "  charger_charging_off\n"
	printf "  charger_connected\n"
	printf "  charger_disconnected\n"
	printf "  battery_full\n"
	printf "  battery_ok\n"
	printf "  battery_low\n"
	printf "  battery_empty\n"
	printf "  battery_state_changed CURRENT_BARS MAX_BARS PERCENTAGE\n"
}

error()
{
	usage
	exit 1
}

version()
{
	printf "%s %s\n" $program $version
}

charger_charging_on()
{
# Fake that charging started
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.charger_charging_on
}

charger_charging_off()
{
# Fake that charging stopped
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.charger_charging_off
}

charger_connected()
{
# Fake that charger was connected
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.charger_connected
}

charger_disconnected()
{
# Fake that charger was disconnected
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.charger_disconnected
}

battery_full()
{
# Fake that the battery is full
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.battery_full
}

battery_ok()
{
# Fake that the battery is ok
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.battery_ok
}

battery_low()
{
# Fake that the battery is low
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.battery_low
}

battery_empty()
{
# Fake that the battery is empty
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.battery_empty
}

battery_state_changed()
{
# Fake that the number of battery bars changed
	$DBUS_SEND $DBUS_SEND_FLAGS $DBUS_PATH $DBUS_INTERFACE.battery_state_changed uint32:$1 uint32:$2 uint32:$3
}

[ $# -eq 0 ] && error

# setup command line options
while ! [ $# -eq 0 ]; do
	case $1 in
	charger_charging_on)
		eval ${1}
		;;
	charger_charging_off)
		eval ${1}
		;;
	charger_connected)
		eval ${1}
		;;
	charger_disconnected)
		eval ${1}
		;;
	battery_full)
		eval ${1}
		;;
	battery_ok)
		eval ${1}
		;;
	battery_low)
		eval ${1}
		;;
	battery_empty)
		eval ${1}
		;;
	battery_state_changed)
		eval ${1} ${2} ${3} ${4}
		shift
		shift
		;;
	--help)
		usage
		exit 0
		;;
	--version)
		version
		exit 0
		;;
	*)
		usage
		exit 1
		;;
	esac
	shift
done
